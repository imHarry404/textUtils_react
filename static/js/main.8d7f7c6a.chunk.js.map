{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","placeholder","onChange","e","target","rows","data","toUpperCase","length","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","prototype","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8d7f7c6a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"../css/TextForm.css\"\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\" >{props.title}</a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light' ? 'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title:PropTypes.string.isRequired,\r\n  aboutText:PropTypes.string.isRequired //it is requied\r\n};\r\n\r\n// default , if no props were passed by mistake and it is required\r\n\r\nNavbar.defaultProps={\r\n    title:\"Set title here\",\r\n    aboutText:\"put About here\",\r\n}","import React, { useState } from 'react'\r\nimport '../css/TextForm.css'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleOnChange = (e) => {\r\n    setText(e.target.value)\r\n    // console.log(\"handleonchange was clicked\")\r\n\r\n  }\r\n  const handleUppperClick = () => {\r\n    // console.log(\"upperclick was clicked\")\r\n    let data = text.toUpperCase()\r\n    if(data.length===0){\r\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\r\n    }\r\n    else{\r\n      setText(data)\r\n      props.showAlert(\"Converted to Upper case !\",\"success\")\r\n    }\r\n  }\r\n  const handleloweClick = () => {\r\n    // console.log('lower case')\r\n    let data = text.toLowerCase();\r\n    if(data.length===0){\r\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\r\n    }\r\n    else{\r\n    setText(data);\r\n    props.showAlert(\"Converted to Lower case !\",\"success\")\r\n    }\r\n  }\r\n  const handleClearClick = () => {\r\n    // console.log('lower case')\r\n    let data = text\r\n    if(data.length===0){\r\n    props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\r\n    }\r\n    else{\r\n    let data=''\r\n    setText(data);\r\n    props.showAlert(\"Text Cleared\",\"success\")}\r\n  };\r\n  \r\n  // handle copy\r\n  const handleCopy=()=>{\r\n    let data=text\r\n    if(data.length===0){\r\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\r\n    }\r\n    else{\r\n    let data=document.getElementById('myBox')\r\n    data.select()\r\n    navigator.clipboard.writeText(data.value)\r\n    props.showAlert(\"Text Copied to clipboard\",\"success\")\r\n    }\r\n  }\r\n  // handle extra spaces\r\n  const handleSpace = () => {\r\n    let data=text\r\n    if(data.length===0){\r\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\r\n    }\r\n    else{\r\n      let data = text.split(/[ ]+/)\r\n    setText(data.join(\" \"));\r\n    props.showAlert(\"All extra spaces were removed\",\"success\")\r\n    }\r\n  };\r\n\r\n\r\n  const [text, setText] = useState('')\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"containter\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb3\">\r\n          <textarea\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            className=\"form-control\"\r\n            value={text}\r\n            placeholder=\"Enter your text here\"\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"5\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-success mx-2 my-2\"\r\n          value={text}\r\n          onClick={handleUppperClick}\r\n        >\r\n          Convert to Upper case\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger mx-2 my-2\"\r\n          value={text}\r\n          onClick={handleloweClick}\r\n        >\r\n          Convert to lower case\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-info mx-2 my-2\"\r\n          value={text}\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-dark mx-2 my-2\"\r\n          value={text}\r\n          onClick={handleSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-warning mx-2 my-2\"\r\n          value={text}\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear text\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your text Summary</h1>\r\n        <p>\r\n          <b>{text.split(\" \").length - 1}</b> words <b>{text.length}</b>{\" \"}\r\n          characters total ..... and <b className=\"time\">{0.008 * text.split(\" \").length}</b> time will be\r\n          taken to read your text\r\n        </p>\r\n        <p>\r\n          <b className=\"fb_blue\">Facebook</b> out of 250/ {250 - text.length}{\" \"}\r\n          characters remaining..<b className=\"gg_red\">Google</b> out of 300/{\" \"}\r\n          {300 - text.length} characters remaining..\r\n          <b className=\"tw_sky\">Twitter</b> out of 280/ {280 - text.length}{\" \"}\r\n          characters remaining\r\n        </p>\r\n        <h2>PreviewðŸ˜‰</h2>\r\n        <p>{text.length > 0 ? text : \"Enter some text to preview hereðŸ¥²\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n    }\r\n    return (\r\n      props.alert && (\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\"><strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}</div>\r\n      )\r\n    );\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [mode, setMode]=useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n        setAlert(null)\n    }, 1000);\n  }\n  const toggleMode=()=>{\n  if(mode==='light'){\n    setMode('dark')\n    document.body.style.backgroundColor = \"#1d1a1a\";\n    showAlert(\"Dark mode enabled!!\",\"success\")\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor='white'\n    showAlert(\"Light mode enabled!!\",\"success\")\n  }\n}\n  return (\n    <>\n\n        <Navbar mode={mode} title=\"Harry Text Fun\" aboutText=\"About Me\" toggleMode={toggleMode}/>\n          <Alert alert={alert} />\n          <div className=\"container my-3\">\n              <TextForm\n                heading=\"Enter your text below to analyze\"\n                mode={mode}\n                showAlert={showAlert}/>\n          </div>\n    </>\n  );\n}\n    \nexport default App;\n    \n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}